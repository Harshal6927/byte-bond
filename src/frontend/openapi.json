{
    "info": {
        "title": "Byte Bond",
        "version": "dev"
    },
    "openapi": "3.1.0",
    "servers": [
        {
            "url": "/"
        }
    ],
    "paths": {
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "GetUser",
                "operationId": "ApiAuthMeGetUser",
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUser"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "operationId": "ApiAuthLoginLogin",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostLogin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/auth/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "operationId": "ApiAuthLogoutLogout",
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/connections/{connection_id}": {
            "get": {
                "tags": [
                    "Connections"
                ],
                "summary": "GetConnection",
                "operationId": "ApiConnectionsConnectionIdGetConnection",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetConnection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Connections"
                ],
                "summary": "DeleteConnection",
                "operationId": "ApiConnectionsConnectionIdDeleteConnection",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetConnection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Connections"
                ],
                "summary": "PatchConnection",
                "operationId": "ApiConnectionsConnectionIdPatchConnection",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchConnection"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetConnection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/connections": {
            "get": {
                "tags": [
                    "Connections"
                ],
                "summary": "GetConnections",
                "operationId": "ApiConnectionsGetConnections",
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/GetConnection"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "description": "Maximal number of items to send."
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "description": "Offset from the beginning of the query."
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of items."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Connections"
                ],
                "summary": "PostConnection",
                "operationId": "ApiConnectionsPostConnection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostConnection"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetConnection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/events/{event_id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "GetEvent",
                "operationId": "ApiEventsEventIdGetEvent",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEvent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "DeleteEvent",
                "operationId": "ApiEventsEventIdDeleteEvent",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEvent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Events"
                ],
                "summary": "PatchEvent",
                "operationId": "ApiEventsEventIdPatchEvent",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchEvent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEvent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "GetEvents",
                "operationId": "ApiEventsGetEvents",
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/GetEvent"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "description": "Maximal number of items to send."
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "description": "Offset from the beginning of the query."
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of items."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "PostEvent",
                "operationId": "ApiEventsPostEvent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostEvent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEvent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/game/answer-question": {
            "post": {
                "tags": [
                    "Game"
                ],
                "summary": "AnswerQuestion",
                "operationId": "ApiGameAnswerQuestionAnswerQuestion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameQuestionResponse"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/game/chat": {
            "post": {
                "tags": [
                    "Game"
                ],
                "summary": "Chat",
                "operationId": "ApiGameChatChat",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameChatRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {}
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/game/complete-connection": {
            "post": {
                "tags": [
                    "Game"
                ],
                "summary": "CompleteConnection",
                "operationId": "ApiGameCompleteConnectionCompleteConnection",
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api/game/status": {
            "get": {
                "tags": [
                    "Game"
                ],
                "summary": "GetGameStatus",
                "operationId": "ApiGameStatusGetGameStatus",
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GameStatus"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/game/scan-qr": {
            "post": {
                "tags": [
                    "Game"
                ],
                "summary": "ScanQrCode",
                "operationId": "ApiGameScanQrScanQrCode",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QRScanRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {}
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/game/start": {
            "post": {
                "tags": [
                    "Game"
                ],
                "summary": "StartGame",
                "operationId": "ApiGameStartStartGame",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameStartRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEvent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/game/stop": {
            "post": {
                "tags": [
                    "Game"
                ],
                "summary": "StopGame",
                "operationId": "ApiGameStopStopGame",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameStopRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEvent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/questions/{question_id}": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "GetQuestion",
                "operationId": "ApiQuestionsQuestionIdGetQuestion",
                "parameters": [
                    {
                        "name": "question_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuestion"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Questions"
                ],
                "summary": "DeleteQuestion",
                "operationId": "ApiQuestionsQuestionIdDeleteQuestion",
                "parameters": [
                    {
                        "name": "question_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuestion"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Questions"
                ],
                "summary": "PatchQuestion",
                "operationId": "ApiQuestionsQuestionIdPatchQuestion",
                "parameters": [
                    {
                        "name": "question_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchQuestion"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuestion"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/questions": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "GetQuestions",
                "operationId": "ApiQuestionsGetQuestions",
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/GetQuestion"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "description": "Maximal number of items to send."
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "description": "Offset from the beginning of the query."
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of items."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Questions"
                ],
                "summary": "PostQuestion",
                "operationId": "ApiQuestionsPostQuestion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostQuestion"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuestion"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/users/{user_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "GetUser",
                "operationId": "ApiUsersUserIdGetUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "DeleteUser",
                "operationId": "ApiUsersUserIdDeleteUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "PatchUser",
                "operationId": "ApiUsersUserIdPatchUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "GetUsers",
                "operationId": "ApiUsersGetUsers",
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/GetUser"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "description": "Maximal number of items to send."
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "description": "Offset from the beginning of the query."
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of items."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "PostUser",
                "operationId": "ApiUsersPostUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/user-answers/{user_answer_id}": {
            "get": {
                "tags": [
                    "User Answers"
                ],
                "summary": "GetUserAnswer",
                "operationId": "ApiUserAnswersUserAnswerIdGetUserAnswer",
                "parameters": [
                    {
                        "name": "user_answer_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserAnswer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "User Answers"
                ],
                "summary": "DeleteUserAnswer",
                "operationId": "ApiUserAnswersUserAnswerIdDeleteUserAnswer",
                "parameters": [
                    {
                        "name": "user_answer_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserAnswer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "User Answers"
                ],
                "summary": "PatchUserAnswer",
                "operationId": "ApiUserAnswersUserAnswerIdPatchUserAnswer",
                "parameters": [
                    {
                        "name": "user_answer_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true,
                        "deprecated": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchUserAnswer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserAnswer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/user-answers/all": {
            "get": {
                "tags": [
                    "User Answers"
                ],
                "summary": "GetAllUserAnswers",
                "operationId": "ApiUserAnswersAllGetAllUserAnswers",
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/GetUserAnswer"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "description": "Maximal number of items to send."
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "description": "Offset from the beginning of the query."
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of items."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/user-answers": {
            "get": {
                "tags": [
                    "User Answers"
                ],
                "summary": "GetUserAnswers",
                "operationId": "ApiUserAnswersGetUserAnswers",
                "responses": {
                    "200": {
                        "description": "Request fulfilled, document follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/GetUserAnswer"
                                            },
                                            "type": "array"
                                        },
                                        "limit": {
                                            "type": "integer",
                                            "description": "Maximal number of items to send."
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "description": "Offset from the beginning of the query."
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of items."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "User Answers"
                ],
                "summary": "PostUserAnswer",
                "operationId": "ApiUserAnswersPostUserAnswer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostUserAnswer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Document created, URL follows",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserAnswer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request syntax or unsupported method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "detail": {
                                            "type": "string"
                                        },
                                        "extra": {
                                            "additionalProperties": {},
                                            "type": [
                                                "null",
                                                "object",
                                                "array"
                                            ]
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "detail",
                                        "status_code"
                                    ],
                                    "description": "Validation Exception",
                                    "examples": [
                                        {
                                            "status_code": 400,
                                            "detail": "Bad Request",
                                            "extra": {}
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "components": {
        "schemas": {
            "ConnectionQuestionData": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "question_id": {
                        "type": "integer"
                    },
                    "question_text": {
                        "type": "string"
                    },
                    "question_answered": {
                        "type": "boolean"
                    },
                    "answered_correctly": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "answered_correctly",
                    "id",
                    "question_answered",
                    "question_id",
                    "question_text"
                ],
                "title": "ConnectionQuestionData"
            },
            "ConnectionStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "active",
                    "completed",
                    "cancelled"
                ],
                "title": "ConnectionStatus"
            },
            "GameChatRequest": {
                "properties": {
                    "message": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "GameChatRequest"
            },
            "GameQuestionResponse": {
                "properties": {
                    "question_id": {
                        "type": "integer"
                    },
                    "answer": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "type": "object",
                "required": [
                    "answer",
                    "question_id"
                ],
                "title": "GameQuestionResponse"
            },
            "GameStartRequest": {
                "properties": {
                    "event_id": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "event_id"
                ],
                "title": "GameStartRequest"
            },
            "GameStatus": {
                "properties": {
                    "user_status": {
                        "$ref": "#/components/schemas/UserStatus"
                    },
                    "qr_code": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "partner_name": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "connection_questions": {
                        "oneOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ConnectionQuestionData"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "user_status"
                ],
                "title": "GameStatus"
            },
            "GameStopRequest": {
                "properties": {
                    "event_id": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "event_id"
                ],
                "title": "GameStopRequest"
            },
            "GetConnection": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ConnectionStatus"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "user1_id": {
                        "type": "integer"
                    },
                    "user2_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "end_time",
                    "event_id",
                    "id",
                    "start_time",
                    "status",
                    "updated_at",
                    "user1_id",
                    "user2_id"
                ],
                "title": "GetConnection"
            },
            "GetEvent": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "whitelist": {
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "required": [
                    "code",
                    "created_at",
                    "id",
                    "is_active",
                    "name",
                    "updated_at",
                    "whitelist"
                ],
                "title": "GetEvent"
            },
            "GetQuestion": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "question": {
                        "type": "string"
                    },
                    "is_signup_question": {
                        "type": "boolean"
                    },
                    "is_game_question": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "id",
                    "is_game_question",
                    "is_signup_question",
                    "question",
                    "updated_at"
                ],
                "title": "GetQuestion"
            },
            "GetUser": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "points": {
                        "type": "integer"
                    },
                    "qr_code": {
                        "type": "string"
                    },
                    "connection_count": {
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    },
                    "is_admin": {
                        "type": "boolean"
                    },
                    "event_id": {
                        "oneOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "required": [
                    "connection_count",
                    "created_at",
                    "email",
                    "id",
                    "is_admin",
                    "name",
                    "points",
                    "qr_code",
                    "status",
                    "updated_at"
                ],
                "title": "GetUser"
            },
            "GetUserAnswer": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "answer": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "question_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "required": [
                    "answer",
                    "created_at",
                    "id",
                    "question_id",
                    "updated_at",
                    "user_id"
                ],
                "title": "GetUserAnswer"
            },
            "PatchConnection": {
                "properties": {
                    "start_time": {
                        "oneOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ]
                    },
                    "end_time": {
                        "oneOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ]
                    },
                    "status": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ConnectionStatus"
                            }
                        ]
                    },
                    "event_id": {
                        "oneOf": [
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "user1_id": {
                        "oneOf": [
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "user2_id": {
                        "oneOf": [
                            {
                                "type": "integer"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [],
                "title": "PatchConnection"
            },
            "PatchEvent": {
                "properties": {
                    "name": {
                        "oneOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "minLength": 1
                    },
                    "code": {
                        "oneOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "maxLength": 64,
                        "minLength": 1
                    },
                    "is_active": {
                        "oneOf": [
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "whitelist": {
                        "oneOf": [
                            {
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [],
                "title": "PatchEvent"
            },
            "PatchQuestion": {
                "properties": {
                    "question": {
                        "oneOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "minLength": 1
                    },
                    "is_signup_question": {
                        "oneOf": [
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "is_game_question": {
                        "oneOf": [
                            {
                                "type": "boolean"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [],
                "title": "PatchQuestion"
            },
            "PatchUser": {
                "properties": {
                    "name": {
                        "oneOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "minLength": 1
                    }
                },
                "type": "object",
                "required": [],
                "title": "PatchUser"
            },
            "PatchUserAnswer": {
                "properties": {
                    "answer": {
                        "oneOf": [
                            {
                                "type": "string"
                            }
                        ],
                        "minLength": 1
                    }
                },
                "type": "object",
                "required": [],
                "title": "PatchUserAnswer"
            },
            "PostConnection": {
                "properties": {
                    "event_id": {
                        "type": "integer"
                    },
                    "user1_id": {
                        "type": "integer"
                    },
                    "user2_id": {
                        "type": "integer"
                    },
                    "end_time": {
                        "oneOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "user1_id",
                    "user2_id"
                ],
                "title": "PostConnection"
            },
            "PostEvent": {
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                    }
                },
                "type": "object",
                "required": [
                    "code",
                    "name"
                ],
                "title": "PostEvent"
            },
            "PostLogin": {
                "properties": {
                    "email": {
                        "type": "string",
                        "minLength": 1
                    },
                    "event_code": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "event_code"
                ],
                "title": "PostLogin"
            },
            "PostQuestion": {
                "properties": {
                    "question": {
                        "type": "string",
                        "minLength": 1
                    },
                    "is_signup_question": {
                        "type": "boolean"
                    },
                    "is_game_question": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "is_game_question",
                    "is_signup_question",
                    "question"
                ],
                "title": "PostQuestion"
            },
            "PostUser": {
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "email": {
                        "type": "string",
                        "minLength": 1
                    },
                    "event_code": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                    },
                    "user_answer": {
                        "items": {
                            "$ref": "#/components/schemas/PostUserAnswer"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "event_code",
                    "name",
                    "user_answer"
                ],
                "title": "PostUser"
            },
            "PostUserAnswer": {
                "properties": {
                    "answer": {
                        "type": "string",
                        "minLength": 1
                    },
                    "question_id": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "answer",
                    "question_id"
                ],
                "title": "PostUserAnswer"
            },
            "QRScanRequest": {
                "properties": {
                    "qr_code": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "type": "object",
                "required": [
                    "qr_code"
                ],
                "title": "QRScanRequest"
            },
            "QuestionResult": {
                "properties": {
                    "correct": {
                        "type": "boolean"
                    },
                    "expected_answer": {
                        "type": "string"
                    },
                    "your_answer": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "correct",
                    "expected_answer",
                    "your_answer"
                ],
                "title": "QuestionResult"
            },
            "UserStatus": {
                "type": "string",
                "enum": [
                    "available",
                    "connecting",
                    "busy"
                ],
                "title": "UserStatus"
            }
        },
        "securitySchemes": {
            "BearerToken": {
                "type": "http",
                "description": "JWT cookie-based authentication and authorization.",
                "name": "token",
                "in": "cookie",
                "scheme": "Bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "BearerToken": []
        }
    ]
}
